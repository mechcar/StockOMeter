{"version":3,"sources":["script.js"],"names":["app","async","crossDomain","url","method","headers","financeKey","financeHost","summaryURL","symbol","moversPromise","$","ajax","movers","then","data","moversObj","gainers","finance","result","losers","mostActive","updateTime","marketOpen","toggleClass","quotes","slice","forEach","quote","HTMLtoAppend","append","click","e","preventDefault","val","getSummary","summary","getChart","chart","getProfile","profile","on","toUpperCase","length","console","log","addClass","removeClass","Swal","fire","title","text","icon","confirmButtonText","timer","timerProgressBar","summaryPromise","values","quoteResponse","validExchanges","exchange","includes","changeCheck","regularMarketChange","valuesObj","longName","previousClosingPrice","regularMarketPreviousClose","openingPrice","regularMarketOpen","price","regularMarketPrice","daysChangeDollars","daysChangePercent","regularMarketChangePercent","regularMarketDayLow","regularMarketDayHigh","fiftyTwoWeekLow","fiftyTwoWeekHigh","regularMarketVolume","averageVolume10Day","averageDailyVolume10Day","valuesObjEntries","Object","entries","newValuesObjEntries","i","availableValuesObj","availableValuesObjArr","check","populate","pennyStockFormatter","value","toFixed","end","parseFloat","bracketWrapNegatives","toLocaleString","chartColor","getChartColor","chartArr","timeAxis","timestamp","priceAxis","indicators","open","undefined","businessOpenEpoch","arr","epochToDate","businessCloseEpoch","j","start","stop","getBusinessHoursIndex","drawChart","prices","google","visualization","arrayToDataTable","dataTable","options","dateInNewTimezone","hAxis","titleTextStyle","color","textStyle","vAxis","minValue","Math","min","maxValue","max","legend","backgroundColor","chartArea","colors","AreaChart","document","getElementById","draw","concatArr","arrA","arrB","map","item","index","timePrice","concat","charts","load","packages","setOnLoadCallback","window","resize","companyDescription","assetProfile","longBusinessSummary","empty","stopImmediatePropagation","width","Date","currentTime","toLocaleTimeString","day","month","year","hour","minute","second","timeZone","timeZoneName","formatter","Intl","DateTimeFormat","startingDate","format","hours","parseInt","minutes","dayOfWeek","getDay","isWeekend","businessHours","marketStatusAndTime","dateConversion","num","sym","abs","epoch","getTimezoneOffset","time","getHours","getMinutes","init","getMovers","getSelectValue"],"mappings":"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","file":"script.9ffe471f.js","sourceRoot":"..\\src","sourcesContent":["// APP using Yahoo Finance API calls to query various quotes for stocks traded on US exchanges\r\n// Proper error handling to address invalid stock symbols and insufficient\r\n// Displays top movers (% gain/ % loss/ most active by volume)\r\n// Displays updated chart when available\r\n\r\nconst app = {};\r\n\r\n// API information from: https://rapidapi.com/apidojo/api/yahoo-finance1\r\napp.financeKey = \"57edb9d42emsh2e21cedcaa1cecbp1f2a9ajsn8c9fb7947387\";\r\napp.financeHost = \"apidojo-yahoo-finance-v1.p.rapidapi.com\";\r\n\r\napp.summaryURL =\r\n\t\"https://apidojo-yahoo-finance-v1.p.rapidapi.com/market/v2/get-quotes?region=US\";\r\n\r\n// API requires at least one entry to return a summary, AMC chosen as default\r\napp.symbol = \"AMC\";\r\n\r\n// Function to call settings of top movers API call\r\napp.movers = function () {\r\n\treturn {\r\n\t\tasync: true,\r\n\t\tcrossDomain: true,\r\n\t\turl: \"https://apidojo-yahoo-finance-v1.p.rapidapi.com/market/v2/get-movers?region=US&lang=en-US&count=10&start=0\",\r\n\t\tmethod: \"GET\",\r\n\t\theaders: {\r\n\t\t\t\"x-rapidapi-key\": app.financeKey,\r\n\t\t\t\"x-rapidapi-host\": app.financeHost,\r\n\t\t},\r\n\t};\r\n};\r\n\r\n// Function to call settings of stock summary API call\r\napp.summary = function () {\r\n\treturn {\r\n\t\tasync: true,\r\n\t\tcrossDomain: true,\r\n\t\turl: `${app.summaryURL}&symbols=${app.symbol}`,\r\n\t\tmethod: \"GET\",\r\n\t\theaders: {\r\n\t\t\t\"x-rapidapi-key\": app.financeKey,\r\n\t\t\t\"x-rapidapi-host\": app.financeHost,\r\n\t\t},\r\n\t};\r\n};\r\n\r\n// Function to call settings of stock chart API call\r\napp.chart = function () {\r\n\treturn {\r\n\t\tasync: true,\r\n\t\tcrossDomain: true,\r\n\t\turl: `https://apidojo-yahoo-finance-v1.p.rapidapi.com/stock/v2/get-chart?interval=5m&symbol=${app.symbol}&range=1d&region=US`,\r\n\t\tmethod: \"GET\",\r\n\t\theaders: {\r\n\t\t\t\"x-rapidapi-key\": app.financeKey,\r\n\t\t\t\"x-rapidapi-host\": app.financeHost,\r\n\t\t},\r\n\t};\r\n};\r\n\r\n// Function to call settings of profile API call\r\napp.profile = function () {\r\n\treturn {\r\n\t\tasync: true,\r\n\t\tcrossDomain: true,\r\n\t\turl: `https://apidojo-yahoo-finance-v1.p.rapidapi.com/stock/v2/get-profile?symbol=${app.symbol}&region=US`,\r\n\t\tmethod: \"GET\",\r\n\t\theaders: {\r\n\t\t\t\"x-rapidapi-key\": app.financeKey,\r\n\t\t\t\"x-rapidapi-host\": app.financeHost,\r\n\t\t},\r\n\t};\r\n};\r\n\r\n// API call for top movers\r\napp.getMovers = function () {\r\n\tconst moversPromise = $.ajax(app.movers());\r\n\treturn moversPromise.then(function (data) {\r\n\t\t// Storing objects of gainers, losers and most active stocks into accessible variables\r\n\t\tconst moversObj = {\r\n\t\t\tgainers: data.finance.result[0],\r\n\t\t\tlosers: data.finance.result[1],\r\n\t\t\tmostActive: data.finance.result[2],\r\n\t\t};\r\n\r\n\t\t// Updates the current time to check if market is open\r\n\t\tapp.updateTime();\r\n\r\n\t\t// Hides most active stocks when market is closed as API returns no data at this time\r\n\t\tif (app.marketOpen() == \"closed\") {\r\n\t\t\t$(\".movers\").toggleClass(\"showMarketClosed\");\r\n\t\t}\r\n\r\n\t\tconst moverSize = 5;\r\n\r\n\t\t// Populates gainers container with buttons\r\n\t\tmoversObj.gainers.quotes.slice(0, moverSize).forEach(function (quote) {\r\n\t\t\tconst HTMLtoAppend = `<div class=\"gainer\">\r\n                <button id=\"moverSymbol\" value=${quote.symbol}>${quote.symbol}</button>\r\n            </div>`;\r\n\t\t\t$(\".gainers\").append(HTMLtoAppend);\r\n\t\t});\r\n\r\n\t\t// Populates losers container with buttons\r\n\t\tmoversObj.losers.quotes.slice(0, moverSize).forEach(function (quote) {\r\n\t\t\tconst HTMLtoAppend = `<div class=\"loser\">\r\n                <button id=\"moverSymbol\" value=${quote.symbol}>${quote.symbol}</button>\r\n            </div>`;\r\n\t\t\t$(\".losers\").append(HTMLtoAppend);\r\n\t\t});\r\n\r\n\t\t// Toggles CSS class to display gainers and losers\r\n\t\t$(\".gainers\").toggleClass(\"showFlex\");\r\n\t\t$(\".losers\").toggleClass(\"showFlex\");\r\n\r\n\t\t// Checks if market is open to display most active stocks\r\n\t\tif (app.marketOpen() == \"open\") {\r\n\t\t\t$(\".mostActive\").toggleClass(\"showFlex\");\r\n\r\n\t\t\t// If market is open, movers container is populated with buttons\r\n\t\t\tmoversObj.mostActive.quotes\r\n\t\t\t\t.slice(0, moverSize)\r\n\t\t\t\t.forEach(function (quote) {\r\n\t\t\t\t\tconst HTMLtoAppend = `<div class=\"mostActiveSymbols\">\r\n                    <button id=\"moverSymbol\" value=${quote.symbol}>${quote.symbol}</button>\r\n                </div>`;\r\n\t\t\t\t\t$(\".mostActive\").append(HTMLtoAppend);\r\n\t\t\t\t});\r\n\t\t}\r\n\r\n\t\t// Links the buttons to subsequent API calls to pull up summary and chart data\r\n\t\t$(\"button\").click(function (e) {\r\n\t\t\te.preventDefault();\r\n\t\t\tapp.symbol = $(this).val();\r\n\t\t\tapp.getSummary(app.summary());\r\n\t\t\tapp.getChart(app.chart());\r\n\t\t\tapp.getProfile(app.profile());\r\n\t\t});\r\n\t});\r\n};\r\n\r\n// Function to handle and register stock symbol from text input\r\napp.getSelectValue = function () {\r\n\t$(\"form\").on(\"submit\", function (e) {\r\n\t\te.preventDefault();\r\n\r\n\t\t// Registers stock symbol from search bar\r\n\t\tapp.symbol = $(\"#symbol\").val().toUpperCase();\r\n\r\n\t\t// Error 1: handling symbols with length of more than 5 characters\r\n\t\tif (app.symbol.length > 5) {\r\n\t\t\tconsole.log(\"Error 1!\");\r\n\t\t\t$(\".quotesContent\").addClass(\"hidden\");\r\n\t\t\t$(\".quotesContent\").removeClass(\"show\");\r\n\t\t\t$(\".chart\").addClass(\"hidden\");\r\n\t\t\t$(\".chart\").removeClass(\"show\");\r\n\r\n\t\t\tSwal.fire({\r\n\t\t\t\ttitle: `Error!`,\r\n\t\t\t\ttext: `It appears that ${\r\n\t\t\t\t\tapp.symbol\r\n\t\t\t\t} is not a listed US security. Most symbols traded in the US have a symbol length between 1 and 5 characters. Did you mean ${app.symbol.slice(\r\n\t\t\t\t\t0,\r\n\t\t\t\t\t5\r\n\t\t\t\t)}?`,\r\n\t\t\t\ticon: \"warning\",\r\n\t\t\t\tconfirmButtonText: \"Continue\",\r\n\t\t\t\ttimer: 5000,\r\n\t\t\t\ttimerProgressBar: true,\r\n\t\t\t});\r\n\r\n\t\t\t$(\"#symbol\").val(\"\");\r\n\t\t\t$(\".profileInformation\").addClass(\"show\");\r\n\t\t\t$(\".profileInformation\").removeClass(\"hidden\");\r\n\t\t}\r\n\r\n\t\t// Proceeds to summary and chart API calls if the symbol is within accepted length\r\n\t\telse {\r\n\t\t\t$(\".quotesContent\").removeClass(\"hidden\");\r\n\t\t\t$(\".quotesContent\").addClass(\"show\");\r\n\t\t\t$(\".chart\").removeClass(\"hidden\");\r\n\t\t\t$(\".chart\").addClass(\"show\");\r\n\t\t\tapp.getSummary(app.summary());\r\n\t\t\tapp.getChart(app.chart());\r\n\t\t\tapp.getProfile(app.profile());\r\n\t\t}\r\n\t});\r\n};\r\n\r\n// API call for stock summary\r\napp.getSummary = function () {\r\n\tconst summaryPromise = $.ajax(app.summary());\r\n\treturn summaryPromise.then(function (data) {\r\n\t\t// Storing values in an accessible variable\r\n\t\tvalues = data.quoteResponse.result[0];\r\n\r\n\t\tconsole.log(values);\r\n\r\n\t\t// Error 2: if call returns no values\r\n\t\tif (typeof values === \"undefined\") {\r\n\t\t\tconsole.log(\"Error 2!\");\r\n\t\t\t$(\".quotesContent\").addClass(\"hidden\");\r\n\t\t\t$(\".quotesContent\").removeClass(\"show\");\r\n\t\t\t$(\".chart\").addClass(\"hidden\");\r\n\t\t\t$(\".chart\").removeClass(\"show\");\r\n\r\n\t\t\tSwal.fire({\r\n\t\t\t\ttitle: `Error!`,\r\n\t\t\t\ttext: `It appears that ${app.symbol} is not a listed US security. Try another symbol.`,\r\n\t\t\t\ticon: \"warning\",\r\n\t\t\t\tconfirmButtonText: \"Continue\",\r\n\t\t\t\ttimer: 3000,\r\n\t\t\t\ttimerProgressBar: true,\r\n\t\t\t});\r\n\r\n\t\t\t$(\"#symbol\").val(\"\");\r\n\t\t\t$(\".profileInformation\").addClass(\"show\");\r\n\t\t\t$(\".profileInformation\").removeClass(\"hidden\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Updates market time with each call\r\n\t\tapp.updateTime();\r\n\r\n\t\t// Checks symbol's corresponding exchange to determine if it is a US security\r\n\t\tvalidExchanges = [\r\n\t\t\t\"NYQ\",\r\n\t\t\t\"PNK\",\r\n\t\t\t\"NMS\",\r\n\t\t\t\"YHD\",\r\n\t\t\t\"NCM\",\r\n\t\t\t\"NGM\",\r\n\t\t\t\"ARC\",\r\n\t\t\t\"BATS\",\r\n\t\t\t\"NGS\",\r\n\t\t\t\"OOTC\",\r\n\t\t\t\"OTC\",\r\n\t\t\t\"ASE\",\r\n\t\t];\r\n\t\texchange = values.exchange;\r\n\r\n\t\t// Error 3: handling for instances where certain values are not found\r\n\t\tif (!validExchanges.includes(exchange)) {\r\n\t\t\tconsole.log(\"Error 3!\", exchange);\r\n\t\t\t$(\".symbol\").text(`${app.symbol}`);\r\n\t\t\t$(\".quotesContent\").addClass(\"hidden\");\r\n\t\t\t$(\".quotesContent\").removeClass(\"show\");\r\n\t\t\t$(\".chart\").addClass(\"hidden\");\r\n\t\t\t$(\".chart\").removeClass(\"show\");\r\n\r\n\t\t\tSwal.fire({\r\n\t\t\t\ttitle: `Error!`,\r\n\t\t\t\ttext: `It appears that ${app.symbol} is not a listed US security. It trades on ${exchange}. Try another symbol.`,\r\n\t\t\t\ticon: \"warning\",\r\n\t\t\t\tconfirmButtonText: \"Continue\",\r\n\t\t\t\ttimer: 3000,\r\n\t\t\t\ttimerProgressBar: true,\r\n\t\t\t});\r\n\r\n\t\t\t$(\"#symbol\").val(\"\");\r\n\t\t\t$(\".profileInformation\").addClass(\"show\");\r\n\t\t\t$(\".profileInformation\").removeClass(\"hidden\");\r\n\t\t\treturn;\r\n\t\t} else {\r\n\t\t\t// Begin populating div.values with values\r\n\r\n\t\t\t// Sign of market change stored for later use in chart formatting\r\n\t\t\tapp.changeCheck = values.regularMarketChange;\r\n\r\n\t\t\t// Object to store desired values from successful API call\r\n\t\t\tconst valuesObj = {\r\n\t\t\t\tlongName: values.longName,\r\n\t\t\t\tpreviousClosingPrice: values.regularMarketPreviousClose,\r\n\t\t\t\topeningPrice: values.regularMarketOpen,\r\n\t\t\t\tprice: values.regularMarketPrice,\r\n\t\t\t\tdaysChangeDollars: values.regularMarketChange,\r\n\t\t\t\tdaysChangePercent: values.regularMarketChangePercent,\r\n\t\t\t\tregularMarketDayLow: values.regularMarketDayLow,\r\n\t\t\t\tregularMarketDayHigh: values.regularMarketDayHigh,\r\n\t\t\t\tfiftyTwoWeekLow: values.fiftyTwoWeekLow,\r\n\t\t\t\tfiftyTwoWeekHigh: values.fiftyTwoWeekHigh,\r\n\t\t\t\tregularMarketVolume: values.regularMarketVolume,\r\n\t\t\t\taverageVolume10Day: values.averageDailyVolume10Day,\r\n\t\t\t};\r\n\r\n\t\t\t// Confirming that the call returns all 13 pieces of information using a for loop\r\n\t\t\tconst valuesObjEntries = Object.entries(valuesObj);\r\n\t\t\tconst newValuesObjEntries = Object.entries(valuesObj);\r\n\r\n\t\t\t// If an entry is undefined, its value is changed to 0\r\n\t\t\tfor (i = 0; i < valuesObjEntries.length; i++) {\r\n\t\t\t\tif (typeof valuesObjEntries[i][1] === \"undefined\") {\r\n\t\t\t\t\tnewValuesObjEntries[i][1] = 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Converting the entries array back into an object\r\n\t\t\tconst availableValuesObj = {\r\n\t\t\t\tlongName: newValuesObjEntries[0][1],\r\n\t\t\t\tpreviousClosingPrice: newValuesObjEntries[1][1],\r\n\t\t\t\topeningPrice: newValuesObjEntries[2][1],\r\n\t\t\t\tprice: newValuesObjEntries[3][1],\r\n\t\t\t\tdaysChangeDollars: newValuesObjEntries[4][1],\r\n\t\t\t\tdaysChangePercent: newValuesObjEntries[5][1],\r\n\t\t\t\tregularMarketDayLow: newValuesObjEntries[6][1],\r\n\t\t\t\tregularMarketDayHigh: newValuesObjEntries[7][1],\r\n\t\t\t\tfiftyTwoWeekLow: newValuesObjEntries[8][1],\r\n\t\t\t\tfiftyTwoWeekHigh: newValuesObjEntries[9][1],\r\n\t\t\t\tregularMarketVolume: newValuesObjEntries[10][1],\r\n\t\t\t\taverageVolume10Day: newValuesObjEntries[11][1],\r\n\t\t\t};\r\n\r\n\t\t\t// Creating an array to check for unavailable data\r\n\t\t\tconst availableValuesObjArr = Object.values(availableValuesObj);\r\n\r\n\t\t\t// Variable to track number of entries that are missing data\r\n\t\t\tapp.check = 0;\r\n\r\n\t\t\tfor (i = 0; i < availableValuesObjArr.length; i++) {\r\n\t\t\t\tif (\r\n\t\t\t\t\tavailableValuesObjArr[i] === 0 ||\r\n\t\t\t\t\tavailableValuesObjArr[i] === \"$0.00\" ||\r\n\t\t\t\t\tavailableValuesObjArr[i] === \"0.00%\"\r\n\t\t\t\t) {\r\n\t\t\t\t\tapp.check += 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Error 4: handling symbols with insufficient data\r\n\t\t\t// If the entire array is comprised of the above values, then the symbol is considered inactive\r\n\t\t\tif (app.check == 12) {\r\n\t\t\t\tconsole.log(\"Error 4!\");\r\n\r\n\t\t\t\tSwal.fire({\r\n\t\t\t\t\ttitle: `Error!`,\r\n\t\t\t\t\ttext: `It appears that ${app.symbol} is not an active US security. Try another symbol.`,\r\n\t\t\t\t\ticon: \"warning\",\r\n\t\t\t\t\tconfirmButtonText: \"Continue\",\r\n\t\t\t\t\ttimer: 3000,\r\n\t\t\t\t\ttimerProgressBar: true,\r\n\t\t\t\t});\r\n\r\n\t\t\t\t$(\"#symbol\").val(\"\");\r\n\t\t\t\t$(\".profileInformation\").addClass(\"show\");\r\n\t\t\t\t$(\".profileInformation\").removeClass(\"hidden\");\r\n\t\t\t} else {\r\n\t\t\t\t// Populate quotesContent with values\r\n\t\t\t\tapp.populate = function () {\r\n\t\t\t\t\t// Updates current time\r\n\t\t\t\t\tapp.updateTime();\r\n\r\n\t\t\t\t\tapp.pennyStockFormatter = function (value) {\r\n\t\t\t\t\t\tif (typeof value === \"number\") {\r\n\t\t\t\t\t\t\tif (value < 1) {\r\n\t\t\t\t\t\t\t\treturn value.toFixed(3);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\treturn value.toFixed(2);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tend = value[value.length - 1];\r\n\t\t\t\t\t\t\tif (value[0] === \"$\") {\r\n\t\t\t\t\t\t\t\tif (parseFloat(value.slice(1)) < 1) {\r\n\t\t\t\t\t\t\t\t\treturn `$${parseFloat(\r\n\t\t\t\t\t\t\t\t\t\tvalue.slice(1)\r\n\t\t\t\t\t\t\t\t\t).toFixed(3)}`;\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\treturn `$${parseFloat(\r\n\t\t\t\t\t\t\t\t\t\tvalue.slice(1)\r\n\t\t\t\t\t\t\t\t\t).toFixed(2)}`;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} else if (value[end] === \"%\") {\r\n\t\t\t\t\t\t\t\tif (parseFloat(value.slice(0, end)) < 1) {\r\n\t\t\t\t\t\t\t\t\treturn `${parseFloat(\r\n\t\t\t\t\t\t\t\t\t\tvalue.slice(0, end)\r\n\t\t\t\t\t\t\t\t\t).toFixed(3)}%`;\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\treturn `${parseFloat(\r\n\t\t\t\t\t\t\t\t\t\tvalue.slice(0, end)\r\n\t\t\t\t\t\t\t\t\t).toFixed(2)}%`;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\t// Updating variables to correct decimal places\r\n\t\t\t\t\tavailableValuesObj.previousClosingPrice =\r\n\t\t\t\t\t\tapp.pennyStockFormatter(\r\n\t\t\t\t\t\t\tavailableValuesObj.previousClosingPrice\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\tavailableValuesObj.openingPrice = app.pennyStockFormatter(\r\n\t\t\t\t\t\tavailableValuesObj.openingPrice\r\n\t\t\t\t\t);\r\n\t\t\t\t\tavailableValuesObj.daysChangeDollars =\r\n\t\t\t\t\t\tapp.bracketWrapNegatives(\r\n\t\t\t\t\t\t\tapp.pennyStockFormatter(\r\n\t\t\t\t\t\t\t\tavailableValuesObj.daysChangeDollars\r\n\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t\t\"$\"\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\tavailableValuesObj.daysChangePercent =\r\n\t\t\t\t\t\tapp.bracketWrapNegatives(\r\n\t\t\t\t\t\t\tapp.pennyStockFormatter(\r\n\t\t\t\t\t\t\t\tavailableValuesObj.daysChangePercent\r\n\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t\t\"%\"\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\tavailableValuesObj.regularMarketDayLow =\r\n\t\t\t\t\t\tapp.pennyStockFormatter(\r\n\t\t\t\t\t\t\tavailableValuesObj.regularMarketDayLow\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\tavailableValuesObj.regularMarketDayHigh =\r\n\t\t\t\t\t\tapp.pennyStockFormatter(\r\n\t\t\t\t\t\t\tavailableValuesObj.regularMarketDayHigh\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\tavailableValuesObj.fiftyTwoWeekLow =\r\n\t\t\t\t\t\tapp.pennyStockFormatter(\r\n\t\t\t\t\t\t\tavailableValuesObj.fiftyTwoWeekLow\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\tavailableValuesObj.fiftyTwoWeekHigh =\r\n\t\t\t\t\t\tapp.pennyStockFormatter(\r\n\t\t\t\t\t\t\tavailableValuesObj.fiftyTwoWeekHigh\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\tavailableValuesObj.price = app.bracketWrapNegatives(\r\n\t\t\t\t\t\tapp.pennyStockFormatter(availableValuesObj.price),\r\n\t\t\t\t\t\t\"$\"\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\t// Populates longName, previousClosingPrice, openingPrice, daysChangeDollars and daysChangePercent spans\r\n\t\t\t\t\t$(\".longName\").text(availableValuesObj.longName);\r\n\t\t\t\t\t$(\".previousClosingPrice\").text(\r\n\t\t\t\t\t\t`$${availableValuesObj.previousClosingPrice}`\r\n\t\t\t\t\t);\r\n\t\t\t\t\t$(\".openingPrice\").text(\r\n\t\t\t\t\t\t`$${availableValuesObj.openingPrice}`\r\n\t\t\t\t\t);\r\n\t\t\t\t\t$(\".daysChangeDollars\").text(\r\n\t\t\t\t\t\tavailableValuesObj.daysChangeDollars\r\n\t\t\t\t\t);\r\n\t\t\t\t\t$(\".daysChangePercent\").text(\r\n\t\t\t\t\t\tavailableValuesObj.daysChangePercent\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\t// Applying CSS class negativeValue to opening price if less than previous close\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\tparseFloat(availableValuesObj.openingPrice) <\r\n\t\t\t\t\t\tparseFloat(availableValuesObj.previousClosingPrice)\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\t$(\".openingPrice\").addClass(\"negativeValue\");\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Otherwise the value is left green\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\t$(\".openingPrice\").removeClass(\"negativeValue\");\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Applying CSS class negativeValue to Day's Change and price if negative\r\n\t\t\t\t\tif (values.regularMarketChange < 0) {\r\n\t\t\t\t\t\t$(\".regularMarketPrice\").addClass(\"negativeValue\");\r\n\t\t\t\t\t\t$(\".daysChangeDollars\").addClass(\"negativeValue\");\r\n\t\t\t\t\t\t$(\".daysChangePercent\").addClass(\"negativeValue\");\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Otherwise the values are left green\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\t$(\".regularMarketPrice\").removeClass(\"negativeValue\");\r\n\t\t\t\t\t\t$(\".daysChangeDollars\").removeClass(\"negativeValue\");\r\n\t\t\t\t\t\t$(\".daysChangePercent\").removeClass(\"negativeValue\");\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Populates daysRange, fiftyTwoWeekRange, regularMarketVolume and averageVolume10Day spans\r\n\t\t\t\t\t$(\".daysRange\").text(\r\n\t\t\t\t\t\t`$${availableValuesObj.regularMarketDayLow} - $${availableValuesObj.regularMarketDayHigh}`\r\n\t\t\t\t\t);\r\n\t\t\t\t\t$(\".fiftyTwoWeekRange\").text(\r\n\t\t\t\t\t\t`$${availableValuesObj.fiftyTwoWeekLow} - $${availableValuesObj.fiftyTwoWeekHigh}`\r\n\t\t\t\t\t);\r\n\t\t\t\t\t$(\".regularMarketVolume\").text(\r\n\t\t\t\t\t\t`${availableValuesObj.regularMarketVolume.toLocaleString(\r\n\t\t\t\t\t\t\t\"en-US\"\r\n\t\t\t\t\t\t)}`\r\n\t\t\t\t\t);\r\n\t\t\t\t\t$(\".averageVolume10Day\").text(\r\n\t\t\t\t\t\t`${availableValuesObj.averageVolume10Day.toLocaleString(\r\n\t\t\t\t\t\t\t\"en-US\"\r\n\t\t\t\t\t\t)}`\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\t// Displays quotesContent and sets symbol\r\n\t\t\t\t\t$(\"#quotesContent\").addClass(\"show\");\r\n\t\t\t\t\t$(\"#quotesContent\").removeClass(\"hidden\");\r\n\t\t\t\t\t$(\".symbol\").text(`${app.symbol}`);\r\n\t\t\t\t};\r\n\r\n\t\t\t\t// Check whether market is open to display either \"Current Price: \" or \"Close: \"\r\n\t\t\t\t// Market open response:\r\n\t\t\t\tif (app.marketOpen() == \"open\") {\r\n\t\t\t\t\tapp.populate();\r\n\r\n\t\t\t\t\t$(\".regularMarketPrice\").text(\r\n\t\t\t\t\t\t`${availableValuesObj.price}`\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Market closed response:\r\n\t\t\t\telse {\r\n\t\t\t\t\tapp.populate();\r\n\t\t\t\t\t$(\".regularMarketPrice\").addClass(\"hidden\");\r\n\t\t\t\t\t$(\".regularMarketPriceHeader\").addClass(\"hidden\");\r\n\t\t\t\t\t$(\".closePrice\").text(`${availableValuesObj.price}`);\r\n\t\t\t\t\t$(\".closeHeader\").removeClass(\"hidden\");\r\n\t\t\t\t\t$(\".closeHeader\").addClass(\"show\");\r\n\r\n\t\t\t\t\t// Applying CSS class negativeValue to close price if day's change was negative\r\n\t\t\t\t\tif (values.regularMarketChange < 0) {\r\n\t\t\t\t\t\t$(\".closePrice\").addClass(\"negativeValue\");\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t$(\".closePrice\").removeClass(\"negativeValue\");\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n};\r\n\r\n// // Queries day's change to determine whether chart is displayed in red (-ve change) or green (+ve change)\r\napp.getChartColor = function () {\r\n\tapp.chartColor = \"green\";\r\n\r\n\tif (app.changeCheck < 0) {\r\n\t\tapp.chartColor = \"red\";\r\n\t}\r\n};\r\n\r\n// API call for stock chart\r\napp.getChart = function () {\r\n\tconst chartPromise = $.ajax(app.chart());\r\n\tchartPromise.then(function (data) {\r\n\t\t// Run here in an attempt to make the color change more responsive to quick switches between red and green graphs\r\n\t\tapp.getChartColor();\r\n\r\n\t\tconst chartArr = data.chart.result[0];\r\n\t\ttimeAxis = chartArr.timestamp;\r\n\t\tpriceAxis = chartArr.indicators.quote[0].open;\r\n\r\n\t\t// Error 5: handling symbols with summary data but no graph data\r\n\t\tif (timeAxis == undefined && app.getSummary()) {\r\n\t\t\tconsole.log(\"Error 5!\");\r\n\t\t\t$(\".chart\").addClass(\"hidden\");\r\n\t\t\t$(\".chart\").removeClass(\"show\");\r\n\r\n\t\t\tSwal.fire({\r\n\t\t\t\ttitle: `Error!`,\r\n\t\t\t\ttext: `It appears that ${app.symbol} does not have updated chart information.`,\r\n\t\t\t\ticon: \"warning\",\r\n\t\t\t\tconfirmButtonText: \"Continue\",\r\n\t\t\t\ttimer: 3000,\r\n\t\t\t\ttimerProgressBar: true,\r\n\t\t\t});\r\n\r\n\t\t\t$(\"#symbol\").val(\"\");\r\n\t\t}\r\n\r\n\t\t// Error 6: handling symbols without graph timestamp, price or summary data\r\n\t\telse if (timeAxis == (undefined || null)) {\r\n\t\t\tconsole.log(\"Error 6!\");\r\n\t\t\t$(\".quotesContent\").addClass(\"hidden\");\r\n\t\t\t$(\".quotesContent\").removeClass(\"show\");\r\n\t\t\t$(\".chart\").addClass(\"hidden\");\r\n\t\t\t$(\".chart\").removeClass(\"show\");\r\n\r\n\t\t\tSwal.fire({\r\n\t\t\t\ttitle: `Error!`,\r\n\t\t\t\ttext: `It appears that ${app.symbol} is not an active US security. It may have been delisted. Try another symbol.`,\r\n\t\t\t\ticon: \"warning\",\r\n\t\t\t\tconfirmButtonText: \"Continue\",\r\n\t\t\t\ttimer: 3000,\r\n\t\t\t\ttimerProgressBar: true,\r\n\t\t\t});\r\n\r\n\t\t\t$(\"#symbol\").val(\"\");\r\n\t\t\t$(\".profileInformation\").addClass(\"show\");\r\n\t\t\t$(\".profileInformation\").removeClass(\"hidden\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Preparing the page for the addition of summary and graph data, and clearing any errors\r\n\t\telse {\r\n\t\t\t$(\".quotesContent\").removeClass(\"hidden\");\r\n\t\t\t$(\".quotesContent\").addClass(\"show\");\r\n\t\t\t$(\".chart\").removeClass(\"hidden\");\r\n\t\t\t$(\".chart\").addClass(\"show\");\r\n\t\t}\r\n\r\n\t\t// Finds index of array corresponding to 9:30am timestamp\r\n\t\tbusinessOpenEpoch = function (arr) {\r\n\t\t\tfor (i = 0; i < arr.length; i++) {\r\n\t\t\t\tif (app.epochToDate(arr[i]) === \"9:30\") {\r\n\t\t\t\t\treturn i;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// Finds index of array corresponding to either current time if the market is open or the 4:05pm timestamp if the market is closed.\r\n\t\t// This is used as the end index when querying the price data for the graph\r\n\t\tbusinessCloseEpoch = function (arr) {\r\n\t\t\tfor (j = 0; j < arr.length; j++) {\r\n\t\t\t\tif (app.epochToDate(arr[j]) === \"16:05\") {\r\n\t\t\t\t\treturn j;\r\n\t\t\t\t} else if (j === arr.length) {\r\n\t\t\t\t\treturn j;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// Setting the variables for start and stop index of the time and price arrays\r\n\t\tconst start = businessOpenEpoch(timeAxis);\r\n\t\tconst stop = businessCloseEpoch(timeAxis);\r\n\r\n\t\t// Returns the data from indices within our desired range of 9:30am -> current time or 4:00pm\r\n\t\tgetBusinessHoursIndex = function (arr) {\r\n\t\t\treturn arr.slice(start, stop);\r\n\t\t};\r\n\r\n\t\ttimeAxis = getBusinessHoursIndex(timeAxis);\r\n\r\n\t\t// Converts the array of epoch to local time string (ex: \"9:30\",\"16:00\")\r\n\t\tfor (i = 0; i < timeAxis.length; i++) {\r\n\t\t\ttimeAxis[i] = app.epochToDate(timeAxis[i]);\r\n\t\t}\r\n\r\n\t\t// Error 7: handling arrays that contain incomplete data from entire business day\r\n\t\tif (app.marketOpen() == \"closed\" && timeAxis.length < 75) {\r\n\t\t\tconsole.log(\"Error 7!\");\r\n\t\t\t$(\".chart\").addClass(\"hidden\");\r\n\t\t\t$(\".chart\").removeClass(\"show\");\r\n\r\n\t\t\tSwal.fire({\r\n\t\t\t\ttitle: `Error!`,\r\n\t\t\t\ttext: `It appears that ${app.symbol} is missing chart data for parts of the regular market open.`,\r\n\t\t\t\ticon: \"warning\",\r\n\t\t\t\tconfirmButtonText: \"Continue\",\r\n\t\t\t\ttimer: 3000,\r\n\t\t\t\ttimerProgressBar: true,\r\n\t\t\t});\r\n\r\n\t\t\t$(\"#symbol\").val(\"\");\r\n\t\t}\r\n\r\n\t\tpriceAxis = getBusinessHoursIndex(priceAxis);\r\n\r\n\t\t// Formats the available price data into either 4 decimals (for stocks under $1) or 2 decimals\r\n\t\tfor (i = 0; i < priceAxis.length; i++) {\r\n\t\t\tif (priceAxis[i] === null) {\r\n\t\t\t\tpriceAxis[i] = priceAxis[i - 1];\r\n\t\t\t} else if (priceAxis[i] < 1.0) {\r\n\t\t\t\tpriceAxis[i] = parseFloat(priceAxis[i].toFixed(4));\r\n\t\t\t} else {\r\n\t\t\t\tpriceAxis[i] = parseFloat(priceAxis[i].toFixed(2));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Creates a 2D array by concatenating the timeAxis and priceAxis arrays\r\n\t\t// This is needed to format the dataTable used to display the graph in Google Charts\r\n\t\tconcatArr = function (arrA, arrB) {\r\n\t\t\treturn arrA.map((item, index) => [item, arrB[index]]);\r\n\t\t};\r\n\r\n\t\ttimePrice = concatArr(timeAxis, priceAxis);\r\n\r\n\t\t// Adds a top row to the 2D array containing the title \"Time\" and the symbol of the stock\r\n\t\tdataTable = [[\"Time\", `${app.symbol}`]].concat(timePrice);\r\n\r\n\t\t// Loads the chart\r\n\t\tgoogle.charts.load(\"current\", { packages: [\"corechart\"] });\r\n\t\tgoogle.charts.setOnLoadCallback(drawChart);\r\n\r\n\t\t// Draws the chart\r\n\t\tfunction drawChart() {\r\n\r\n\t\t\tconst prices = google.visualization.arrayToDataTable(dataTable);\r\n\r\n\t\t\t// Formatting options for graph\r\n\t\t\toptions = {\r\n\t\t\t\ttitle: `${app.symbol} - ${app.dateInNewTimezone}`,\r\n\r\n\t\t\t\thAxis: {\r\n\t\t\t\t\ttitle: \"Time\",\r\n\t\t\t\t\ttitleTextStyle: { color: \"white\" },\r\n\t\t\t\t\ttextStyle: { color: \"white\" },\r\n\t\t\t\t},\r\n\r\n\t\t\t\tvAxis: {\r\n\t\t\t\t\tminValue: Math.min(priceAxis) - 5,\r\n\t\t\t\t\tmaxValue: Math.max(priceAxis) + 5,\r\n\t\t\t\t\ttitle: \"Price\",\r\n\t\t\t\t\ttitleTextStyle: { color: \"white\" },\r\n\t\t\t\t\ttextStyle: { color: \"white\" },\r\n\t\t\t\t},\r\n\r\n\t\t\t\tlegend: { textStyle: { color: \"white\" } },\r\n\t\t\t\ttitleTextStyle: { color: \"white\" },\r\n\t\t\t\tbackgroundColor: \"black\",\r\n\t\t\t\tchartArea: { backgroundColor: \"black\" },\r\n\t\t\t\tcolors: [`${app.chartColor}`],\r\n\t\t\t};\r\n\r\n\t\t\t// Calling graph\r\n\t\t\tconst chart = new google.visualization.AreaChart(\r\n\t\t\t\tdocument.getElementById(\"graph\")\r\n\t\t\t);\r\n\t\t\tchart.draw(prices, options);\r\n\t\t}\r\n\t\t$(window).resize(function () {\r\n\t\t\tdrawChart();\r\n\t\t});\r\n\t});\r\n};\r\n\r\napp.getProfile = function () {\r\n\tconst profilePromise = $.ajax(app.profile());\r\n\tprofilePromise.then(function (data) {\r\n\t\tconsole.log(data);\r\n\t\tapp.companyDescription = data.assetProfile.longBusinessSummary;\r\n\t\tconsole.log(app.companyDescription);\r\n\r\n\t\tif (app.companyDescription === undefined) {\r\n\t\t\t$(\".profileInformation\").addClass(\"hidden\");\r\n\r\n\t\t\tSwal.fire({\r\n\t\t\t\ttitle: `Error!`,\r\n\t\t\t\ttext: `It appears that ${app.symbol} is missing information from its profile.`,\r\n\t\t\t\ticon: \"warning\",\r\n\t\t\t\tconfirmButtonText: \"Continue\",\r\n\t\t\t\ttimer: 3000,\r\n\t\t\t\ttimerProgressBar: true,\r\n\t\t\t});\r\n\t\t\t$(\"#symbol\").val(\"\");\r\n\t\t} else {\r\n\t\t\t$(\".profileInformation\").empty();\r\n\r\n\t\t\t// Populates profileInformation container\r\n\t\t\tconst HTMLtoAppend = `<button class=\"getProfile\" value=${app.symbol}>View Profile</button>`;\r\n\t\t\t$(\".profileInformation\").append(HTMLtoAppend);\r\n\r\n\t\t\t// Displays profile\r\n\t\t\t$(\".profileInformation\").on(\"click\", function (e) {\r\n\t\t\t\te.stopImmediatePropagation();\r\n\t\t\t\te.preventDefault();\r\n\r\n\t\t\t\tSwal.fire({\r\n\t\t\t\t\ttitle: `Profile for ${app.symbol}:`,\r\n\t\t\t\t\ttext: app.companyDescription,\r\n\t\t\t\t\ticon: \"info\",\r\n\t\t\t\t\twidth: 600,\r\n\t\t\t\t\tconfirmButtonText: \"Return to Quote\",\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t\t$(\"#symbol\").val(\"\");\r\n\t\t}\r\n\t});\r\n};\r\n\r\n// Helper functions\r\n\r\n// Checks current time to verify whether market is open or closed\r\napp.currentTime = function () {\r\n\treturn new Date();\r\n};\r\n\r\n// Converts date to format usable for other calculations ()\r\napp.dateConversion = function () {\r\n\tapp.currentTime.toLocaleTimeString;\r\n\r\n\t// Options to return time in EST/EDT\r\n\tapp.options = {\r\n\t\tday: \"2-digit\",\r\n\t\tmonth: \"2-digit\",\r\n\t\tyear: \"2-digit\",\r\n\t\thour: \"2-digit\",\r\n\t\tminute: \"2-digit\",\r\n\t\tsecond: \"2-digit\",\r\n\t\ttimeZone: \"America/New_York\",\r\n\t\ttimeZoneName: \"short\",\r\n\t};\r\n\r\n\t// Converts local time to EST/EDT\r\n\tapp.formatter = new Intl.DateTimeFormat(\"sv-SE\", app.options);\r\n\tapp.startingDate = app.currentTime();\r\n\tapp.dateInNewTimezone = app.formatter.format(app.startingDate);\r\n\r\n\t// Grabbing hours and minutes in 24 hour format\r\n\tapp.hours = parseInt(app.dateInNewTimezone.slice(8, 11));\r\n\tapp.minutes = parseInt(app.dateInNewTimezone.slice(12, 15));\r\n};\r\n\r\n// Checks if current time is within 9:30am - 4:30pm EST/EDT\r\napp.businessHours = function () {\r\n\treturn (app.hours >= 9 && app.minutes >= 30) || app.hours <= 16;\r\n\r\n\t// For market closed styling, uncomment code below:\r\n\t// return (app.hours < 9 && app.minutes < 30) || app.hours > 16;\r\n};\r\n\r\n// Checks if it is a weekday or weekend\r\napp.dayOfWeek = app.currentTime().getDay();\r\napp.isWeekend = app.dayOfWeek === 6 || app.dayOfWeek === 0;\r\n\r\n// Checks current market status\r\napp.marketOpen = function () {\r\n\tif (app.isWeekend || !app.businessHours()) {\r\n\t\treturn \"closed\";\r\n\t} else {\r\n\t\treturn \"open\";\r\n\t}\r\n};\r\n\r\n// Populate date/time field on page\r\napp.marketStatusAndTime = function () {\r\n\t$(\".marketStatus\").text(`Market is currently ${app.marketOpen()}.`);\r\n\t$(\".currentTime\").text(`Last refreshed: ${app.dateInNewTimezone}`);\r\n};\r\n\r\n// Condensed function to call all of the above\r\napp.updateTime = function () {\r\n\tapp.currentTime();\r\n\tapp.dateConversion();\r\n\tapp.marketOpen();\r\n\tapp.marketStatusAndTime();\r\n};\r\n\r\n// Formats negative numbers to be displayed wrapped in brackets\r\napp.bracketWrapNegatives = function (num, sym) {\r\n\tif (typeof num == \"undefined\") {\r\n\t\treturn 0;\r\n\t}\r\n\r\n\tif (num[0] === \"(\" && num[num.length - 1] === \")\") {\r\n\t\tnum = `-${num.slice(1, num.length - 1)}`;\r\n\t}\r\n\r\n\tif (num[1] === \"$\") {\r\n\t\tnum = num.slice(2);\r\n\t} else if (num[0] === \"$\") {\r\n\t\tnum = num.slice(1);\r\n\t} else if (num[num.length - 1] === \"%\") {\r\n\t\tnum = num.slice(0, num.length - 1);\r\n\t}\r\n\r\n\tnum = parseFloat(num);\r\n\r\n\tif (num < 0) {\r\n\t\tif (sym === \"$\") {\r\n\t\t\treturn `(${sym}${Math.abs(num).toFixed(2)})`;\r\n\t\t} else if (sym === \"%\") {\r\n\t\t\treturn `(${Math.abs(num).toFixed(2)}${sym})`;\r\n\t\t}\r\n\t} else {\r\n\t\tif (sym === \"$\") {\r\n\t\t\treturn `${sym}${num.toFixed(2)}`;\r\n\t\t} else if (sym === \"%\") {\r\n\t\t\treturn `${num.toFixed(2)}${sym}`;\r\n\t\t}\r\n\t}\r\n};\r\n\r\n// Converts epoch (ms) to current time\r\napp.epochToDate = function (epoch) {\r\n\tif (epoch < 10000000000) epoch *= 1000; // convert to milliseconds (Epoch is usually expressed in seconds, but Javascript uses Milliseconds)\r\n\tvar epoch = epoch + new Date().getTimezoneOffset() * -1; //for timeZone\r\n\thours = new Date(epoch).getHours();\r\n\tminutes = new Date(epoch).getMinutes() + 1;\r\n\r\n\tif (minutes == 60) {\r\n\t\tminutes = \"00\";\r\n\t\thours += 1;\r\n\t} else if (minutes == 5) {\r\n\t\tminutes = \"05\";\r\n\t}\r\n\r\n\ttime = `${hours}:${minutes}`;\r\n\treturn time;\r\n};\r\n\r\n// Init\r\napp.init = function () {\r\n\tthis.getMovers();\r\n\tthis.getSelectValue();\r\n};\r\n\r\n// DocReady\r\n$(function () {\r\n\tapp.init();\r\n});\r\n"]}